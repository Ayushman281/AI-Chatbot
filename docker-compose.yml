version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-data-agent-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-dataagent}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-chinook}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-dataagent} -d ${DB_NAME:-chinook}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-data-agent-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 4000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-chinook}
      DB_USER: ${DB_USER:-dataagent}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-supersecret}
    ports:
      - "${API_PORT:-4000}:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend Web Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-data-agent-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "${WEB_PORT:-3000}:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      VITE_API_URL: ${API_URL:-http://localhost:4000}

volumes:
  postgres-data:
